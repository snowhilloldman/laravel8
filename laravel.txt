安装:
php artisan storage:link
把storage 软链接到public
/app/public/storage -> /app/storage/app/public

 根据数据库生成文件
 php artisan admin:generate
php artisan make:model ModelName -m
- make:controller - 生成控制器
- make:migration - 生成数据迁移文件
- make:seeder - 生成 seeder 文件
- make:factory - 生成模型工厂文件
- make:policy - 生成授权策略文件


备份
mysqldump -u root  --add-drop-database > database/backup23051806.sql
--add-drop-table
--no-data

mysqldump -h 127.0.0.1 -u root --column-statistics=0 bitnami_myapp > ~/code/docker/database/bitnami_myapp_$(date +%Y_%m_%d_%H_%M_%S).sql


DROP TABLE IF EXISTS `posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `posts` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `icon` varchar(255) DEFAULT NULL,
  `category_id` int(11) DEFAULT 0,
  `user_id` int(11) DEFAULT 0,
  `content` mediumtext DEFAULT NULL,
  `status` enum('draft','closed','public') DEFAULT 'draft',
  `view_amount` int(11) DEFAULT 0,
  `attachment_amount` int(11) DEFAULT 0,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `_id` int(11) DEFAULT 0,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


导入时import : sed -i 's/$/\\$/g' db.sql

mysqldump -u root -p  db_name > db.sql

composer create-project laravel/laravel studentcrud-app

php artisan make:migration create_students_table

php artisan migrate

php artisan make:controller StudentController --resource

php artisan make:model Student

php artisan make:model Category -m


php artisan make:migration update_user_table_name_to_username


php artisan admin:make UserController --model=App\\Models\\User
php artisan admin:make CategoryController --model='App\Models\Category'


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>

<link href="{{ url('resources/css/bootstrap.bundle.min.css')}}" rel="stylesheet">
<script src="{{ url('resources/js/bootstrap.bundle.min.js') }}"></script>


1. 清除配置缓存 - php artisan config:cache 
2. 清除路由缓存 - php artisan route:cache
3. 清除视图缓存 - php artisan view:cache
4. 清除应用缓存 - php artisan cache:clear    php artisan cache:clear

php artisan route:list




admin user panel 
https://www.youtube.com/watch?v=tafzPLRP92I
https://github.com/LaravelDaily/Larav...




 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap v5 - Alpha1</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css" integrity="sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I" crossorigin="anonymous">
</head>
<body>
    
    <style>
        .my-custom-row {
            background-color: bisque;
            height: 400px;
        }
    </style>

    <div class="container">
        <div class="row">
            <div class="col-sm-12 col-md-6 col-lg-2">Col One</div>
            <div class="col-sm-12 col-md-6 col-lg-8">Col Two</div>
        </div>

        <div class="row">
            <div class="col-sm-6 order-sm-2">Col One</div>
            <div class="col-sm-6 order-sm-1">Col Two</div>
        </div>

        <div class="row">
            <div class="col-sm-4 offset-2">Col One</div>
            <div class="col-sm-4 offset-1">Col Two</div>
        </div>

        <div class="row my-custom-row justify-content-center align-items-center">
            <div class="col-sm-4"><div class="p-3 border bg-light">Col One</div></div>
            <div class="col-sm-4"><div class="p-3 border bg-light">Col Two</div></div>
        </div>
        
    </div>

    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/js/bootstrap.min.js" integrity="sha384-oesi62hOLfzrys4LxRF63OJCXdXDipiYWBnvTl9Y9/TRlw5xlKIEHpNyvvDShgf/" crossorigin="anonymous"></script>
</body>
</html>

在 Git 中,如果你还未提交修改(commit),可以很轻易地撤销修改。
主要有两种方式:
1. 撤销对文件的修改 - git checkout -- <file>
此命令会以 HEAD 中的版本来覆盖你的工作目录中的文件。
例如,如果你修改了 app.js 文件,但还未提交,你可以运行:
bash
git checkout -- app.js
此举会撤销你对 app.js 的修改。
2. 撤销所有未提交的修改 - git reset --hard
此命令会重置你的工作目录到 HEAD 指向的提交。这会撤销所有未提交的修改。
bash 
git reset --hard
注意,此命令是彻底撤销你工作目录中的所有修改的最强硬方法。你的修改会被删除,无法恢复。
所以,在使用之前一定要确定,因为这可能导致你丢失重要数据。
如果你只想撤销某些修改,我强烈建议使用 git checkout -- <file> 来选择性地撤销修改。这是一种更温和的方式,也更不易出错。
如果你已经提交了修改,那么就需要使用 git revert 或 git reset 来回滚提交了,这就是另一个话题了。
希望这个解释能帮助到你!如果有其它 Git 相关的问题,欢迎在评论中提出。